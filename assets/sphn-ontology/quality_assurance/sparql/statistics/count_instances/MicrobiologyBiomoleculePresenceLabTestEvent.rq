PREFIX sphn:<https://biomedit.ch/rdf/sphn-schema/sphn#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT *
WHERE {
    {
    SELECT ?origin (COUNT(?origin) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .
        BIND("https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent" as ?origin)
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasDateTime" as ?origin)
        optional{ ?resource sphn:hasDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest" as ?origin)
        optional{ ?resource sphn:hasLabTest ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasOrganism" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasOrganism ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasOrganism" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasOrganism ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTargetMolecule/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasQuantity" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasQuantity ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasQuantity/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasQuantity/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasQuantity/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasQuantity/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasQuantity/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasQuantity/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasStringValue" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasStringValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasQuantity" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasQuantity ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasQuantity/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasQuantity/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasQuantity/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasQuantity/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasQuantity/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasQuantity/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasLowerLimit" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasLowerLimit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasLowerLimit/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasLowerLimit/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasLowerLimit/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasLowerLimit/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasLowerLimit/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasLowerLimit/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasLowerLimit/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasLowerLimit/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasUpperLimit" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasUpperLimit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasUpperLimit/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasUpperLimit/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasUpperLimit/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasUpperLimit/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasUpperLimit/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasUpperLimit/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasUpperLimit/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasResult/sphn:hasNumericalReference/sphn:hasUpperLimit/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasTypeCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasTypeCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasTypeCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasTypeCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasTypeCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasTypeCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasUniformResourceLocator" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasUniformResourceLocator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDescription" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasDescription ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasSoftware/sphn:hasVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasProductCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasProductCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasProductCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasProductCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasProductCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasProductCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasInstrument/sphn:hasProductCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasInstrument/sphn:hasProductCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasTypeCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasTypeCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasTypeCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasTypeCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasTypeCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasTypeCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasUniformResourceLocator" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasUniformResourceLocator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDescription" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasDescription ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasSoftware/sphn:hasVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasProductCode" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasProductCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasProductCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasProductCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasProductCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasProductCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasLabTest/sphn:hasTestKit/sphn:hasProductCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLabTest/sphn:hasTestKit/sphn:hasProductCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample" as ?origin)
        optional{ ?resource sphn:hasSample ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasBodySite" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasBodySite ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasBodySite/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasBodySite/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasBodySite/sphn:hasLaterality" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasBodySite/sphn:hasLaterality ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasOrganism" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasOrganism ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasOrganism/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasOrganism/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasOrganism/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasOrganism/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasCollectionDateTime" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasCollectionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasMaterialTypeCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasMaterialTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasFixationType" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasFixationType ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasSample/sphn:hasPrimaryContainer" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasPrimaryContainer ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#MicrobiologyBiomoleculePresenceLabTestEvent> .

        BIND("sphn:hasReportDateTime" as ?origin)
        optional{ ?resource sphn:hasReportDateTime ?predicate . }
    }
    GROUP BY ?origin
}}