PREFIX sphn:<https://biomedit.ch/rdf/sphn-schema/sphn#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT *
WHERE {
    {
    SELECT ?origin (COUNT(?origin) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .
        BIND("https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay" as ?origin)
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun" as ?origin)
        optional{ ?resource sphn:hasSequencingRun ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDateTime" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasCreationDateTime" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasCreationDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasUniformResourceIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasUniformResourceIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasEncoding" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasEncoding ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasFormatCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasFormatCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasHash" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasHash ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasAverageInsertSize" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasAverageInsertSize ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasAverageInsertSize/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasAverageInsertSize/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasAverageInsertSize/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasAverageInsertSize/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasAverageInsertSize/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasAverageInsertSize/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasAverageInsertSize/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasAverageInsertSize/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasAverageReadLength" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasAverageReadLength ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasAverageReadLength/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasAverageReadLength/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasAverageReadLength/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasAverageReadLength/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasAverageReadLength/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasAverageReadLength/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasAverageReadLength/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasAverageReadLength/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasMeanReadDepth" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasMeanReadDepth ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasMeanReadDepth/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasMeanReadDepth/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasMeanReadDepth/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasMeanReadDepth/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasMeanReadDepth/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasMeanReadDepth/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasMeanReadDepth/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasMeanReadDepth/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasReadCount" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasReadCount ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasReadCount/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasReadCount/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasReadCount/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasReadCount/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasReadCount/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasReadCount/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasReadCount/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasReadCount/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasQuantity" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasQuantity ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasSequencingRun/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile" as ?origin)
        optional{ ?resource sphn:hasDataFile ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasCreationDateTime" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasCreationDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasUniformResourceIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasUniformResourceIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasEncoding" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasEncoding ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasFormatCode" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasFormatCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasHash" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasHash ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasIntendedReadDepth" as ?origin)
        optional{ ?resource sphn:hasIntendedReadDepth ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasIntendedReadDepth/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasIntendedReadDepth/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasIntendedReadDepth/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasIntendedReadDepth/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasIntendedReadDepth/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasIntendedReadDepth/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasIntendedReadDepth/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasIntendedReadDepth/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasIntendedReadLength" as ?origin)
        optional{ ?resource sphn:hasIntendedReadLength ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasIntendedReadLength/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasIntendedReadLength/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasIntendedReadLength/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasIntendedReadLength/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasIntendedReadLength/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasIntendedReadLength/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasIntendedReadLength/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasIntendedReadLength/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasKitCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasKitCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasKitCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasKitCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasKitCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasKitCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasKitCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasKitCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasTargetEnrichmentKitCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasTargetEnrichmentKitCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasTargetEnrichmentKitCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasTargetEnrichmentKitCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasTargetEnrichmentKitCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasTargetEnrichmentKitCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasTargetEnrichmentKitCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasTargetEnrichmentKitCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasOrganism" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasOrganism ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasTranscript/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasOrganism" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasOrganism ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasProtein/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasOrganism" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasOrganism ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasOrganism/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasOrganism/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasOrganism/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasOrganism/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasOrganism/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasFocusGene/sphn:hasOrganism/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasCreationDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasCreationDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasUniformResourceIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasUniformResourceIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasEncoding" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasEncoding ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasFormatCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasFormatCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasHash" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasHash ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasGenePanel/sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasIntendedInsertSize" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasIntendedInsertSize ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasIntendedInsertSize/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasIntendedInsertSize/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasIntendedInsertSize/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasIntendedInsertSize/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasIntendedInsertSize/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasIntendedInsertSize/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasIntendedInsertSize/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasIntendedInsertSize/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasBodySite" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasBodySite ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasBodySite/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasBodySite/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasBodySite/sphn:hasLaterality" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasBodySite/sphn:hasLaterality ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasCollectionDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasCollectionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasMaterialTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasMaterialTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasFixationType" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasFixationType ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasPrimaryContainer" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasOutput/sphn:hasPrimaryContainer ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasBodySite" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasBodySite ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasBodySite/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasBodySite/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasBodySite/sphn:hasLaterality" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasBodySite/sphn:hasLaterality ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasCollectionDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasCollectionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasMaterialTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasMaterialTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasFixationType" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasFixationType ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasPrimaryContainer" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasInput/sphn:hasPrimaryContainer ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStartDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStartDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasQuantity" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasQuantity ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite/sphn:hasLaterality" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite/sphn:hasLaterality ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasCollectionDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasCollectionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasMaterialTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasMaterialTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasFixationType" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasFixationType ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasPrimaryContainer" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasOutput/sphn:hasPrimaryContainer ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite/sphn:hasLaterality" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite/sphn:hasLaterality ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasCollectionDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasCollectionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasMaterialTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasMaterialTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasFixationType" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasFixationType ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasPrimaryContainer" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasInput/sphn:hasPrimaryContainer ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStartDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStartDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasPredecessor" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasPredecessor ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasCreationDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasCreationDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasUniformResourceIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasUniformResourceIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasEncoding" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasEncoding ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasFormatCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasFormatCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDescription" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDescription ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasCreationDateTime" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasCreationDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasUniformResourceIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasUniformResourceIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasEncoding" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasEncoding ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasFormatCode" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasFormatCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDescription" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasDescription ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasVersion" as ?origin)
        optional{ ?resource sphn:hasLibraryPreparation/sphn:hasStandardOperatingProcedure/sphn:hasVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSequencingInstrument/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample" as ?origin)
        optional{ ?resource sphn:hasSample ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasBodySite" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasBodySite ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasBodySite/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasBodySite/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasBodySite/sphn:hasLaterality" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasBodySite/sphn:hasLaterality ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasCollectionDateTime" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasCollectionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasMaterialTypeCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasMaterialTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasFixationType" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasFixationType ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasSample/sphn:hasPrimaryContainer" as ?origin)
        optional{ ?resource sphn:hasSample/sphn:hasPrimaryContainer ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStartDateTime" as ?origin)
        optional{ ?resource sphn:hasStartDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor" as ?origin)
        optional{ ?resource sphn:hasPredecessor ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite/sphn:hasLaterality" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite/sphn:hasLaterality ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasCollectionDateTime" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasCollectionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasMaterialTypeCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasMaterialTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasFixationType" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasFixationType ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasOutput/sphn:hasPrimaryContainer" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasOutput/sphn:hasPrimaryContainer ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite/sphn:hasLaterality" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite/sphn:hasLaterality ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasBodySite/sphn:hasLaterality/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasCollectionDateTime" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasCollectionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasMaterialTypeCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasMaterialTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasFixationType" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasFixationType ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasInput/sphn:hasPrimaryContainer" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasInput/sphn:hasPrimaryContainer ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasAdmissionDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasCareHandling/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasDischargeLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasExact ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasAdministrativeCase/sphn:hasOriginLocation/sphn:hasTypeCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStartDateTime" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStartDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasPredecessor" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasPredecessor ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasCreationDateTime" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasCreationDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasUniformResourceIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasUniformResourceIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasEncoding" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasEncoding ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasFormatCode" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasFormatCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDescription" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasDescription ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasVersion" as ?origin)
        optional{ ?resource sphn:hasPredecessor/sphn:hasStandardOperatingProcedure/sphn:hasVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasCreationDateTime" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasCreationDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasUniformResourceIdentifier" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasUniformResourceIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasEncoding" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasEncoding ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasFormatCode" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasFormatCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasDescription" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasDescription ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingAssay> .

        BIND("sphn:hasStandardOperatingProcedure/sphn:hasVersion" as ?origin)
        optional{ ?resource sphn:hasStandardOperatingProcedure/sphn:hasVersion ?predicate . }
    }
    GROUP BY ?origin
}}