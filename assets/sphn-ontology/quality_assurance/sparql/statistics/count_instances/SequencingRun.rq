PREFIX sphn:<https://biomedit.ch/rdf/sphn-schema/sphn#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT *
WHERE {
    {
    SELECT ?origin (COUNT(?origin) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .
        BIND("https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun" as ?origin)
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDateTime" as ?origin)
        optional{ ?resource sphn:hasDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile" as ?origin)
        optional{ ?resource sphn:hasDataFile ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPrimarySystem/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSourceSystem/sphn:hasPurpose ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasCreationDateTime" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasCreationDateTime ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasUniformResourceIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasUniformResourceIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasSharedIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasSubjectPseudoIdentifier/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasEncoding" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasEncoding ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasFormatCode" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasFormatCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasHash" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasHash ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasHash/sphn:hasAlgorithm ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue" as ?origin)
        optional{ ?resource sphn:hasDataFile/sphn:hasHash/sphn:hasStringValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasAverageInsertSize" as ?origin)
        optional{ ?resource sphn:hasAverageInsertSize ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasAverageInsertSize/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasAverageInsertSize/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasAverageInsertSize/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasAverageInsertSize/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasAverageInsertSize/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasAverageInsertSize/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasAverageInsertSize/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasAverageInsertSize/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasAverageReadLength" as ?origin)
        optional{ ?resource sphn:hasAverageReadLength ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasAverageReadLength/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasAverageReadLength/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasAverageReadLength/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasAverageReadLength/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasAverageReadLength/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasAverageReadLength/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasAverageReadLength/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasAverageReadLength/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasMeanReadDepth" as ?origin)
        optional{ ?resource sphn:hasMeanReadDepth ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasMeanReadDepth/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasMeanReadDepth/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasMeanReadDepth/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasMeanReadDepth/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasMeanReadDepth/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasMeanReadDepth/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasMeanReadDepth/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasMeanReadDepth/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasReadCount" as ?origin)
        optional{ ?resource sphn:hasReadCount ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasReadCount/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasReadCount/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasReadCount/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasReadCount/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasReadCount/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasReadCount/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasReadCount/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasReadCount/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasDataProvider" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasDataProvider ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasDepartment/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasName ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasIdentifier ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasInstitutionCode/sphn:hasCodingSystemAndVersion ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasCategory" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasDataProvider/sphn:hasCategory ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasQuantity" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasQuantity ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasValue" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasValue ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasUnit/sphn:hasCode ?predicate . }
    }
    GROUP BY ?origin
    } UNION
    {
    SELECT ?origin (COUNT(?predicate) as ?count_instances)
    WHERE {
        ?resource a <https://biomedit.ch/rdf/sphn-schema/sphn#SequencingRun> .

        BIND("sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasComparator" as ?origin)
        optional{ ?resource sphn:hasQualityControlMetric/sphn:hasQuantity/sphn:hasComparator ?predicate . }
    }
    GROUP BY ?origin
}}